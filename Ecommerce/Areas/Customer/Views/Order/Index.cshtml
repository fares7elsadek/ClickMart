@model OrderViewModel

@{
    ViewData["Title"] = "Index";
}

@section headingSection {
    <div class="bg-primary">
        <div class="container py-4">
            <!-- Breadcrumb -->
            <nav class="d-flex">
                <h6 class="mb-0">
                    <a href="" class="text-white-50">Home</a>
                    <span class="text-white-50 mx-2"> > </span>
                    <a href="" class="text-white-50">2. Shopping cart</a>
                    <span class="text-white-50 mx-2"> > </span>
                    <a href="" class="text-white"><u>3. Order info</u></a>
                    <span class="text-white-50 mx-2"> > </span>
                    <a href="" class="text-white-50">4. Payment</a>
                </h6>
            </nav>
            <!-- Breadcrumb -->
        </div>
    </div>
}
@Html.AntiForgeryToken()
<section class="bg-light py-5">
    <div class="container">
        <div class="row">
            <div class="col-xl-8 col-lg-8 mb-4">
                <!-- Checkout -->
                <div class="card shadow-0 border">
                    <div class="p-4">
                        <h5 class="card-title mb-3">Shipping info</h5>
                        <div class="row mb-3">
                            @foreach(var shippingInfo in Model.ShippingMethods)
                            {
                                <div class="col-lg-4 mb-3">
                                    <!-- Default checked radio -->
                                    <div class="form-check h-100 border rounded-3">
                                        <div class="p-3">
                                            <input class="form-check-input shippingMethod" value="@shippingInfo.Id" type="radio" name="ShippingMethod" id="flexRadioDefault1" @(shippingInfo.Id == @Model.Header.ShippingMethodId ? "checked" : "") />
                                            <label class="form-check-label" for="flexRadioDefault1">
                                                @shippingInfo.Name <br />
                                                <small class="text-muted">@shippingInfo.Description </small>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        <div asp-validation-summary="All"></div>
                        <h5 class="card-title mb-3">Address</h5>
                        <div class="row">
                            @foreach (var Address in Model.AddressList)
                            {
                                <div class="col-lg-4 mb-3">
                                    <!-- Default checked radio -->
                                    <div class="form-check h-100 border rounded-3">
                                        <div class="p-3">
                                            <input class="form-check-input address" value="@Address.Id" type="radio" name="Address" id="flexRadioDefault2" @(Address.IsDefault ? "checked" : "")  />
                                            <label class="form-check-label" for="flexRadioDefault2">
                                                @Address.Country.Name,@Address.City,@Address.AddressLine1 <br />
                                                <small class="text-muted">@Address.UnitNumber,@Address.StreetNumber </small>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            }
                            <div class="col-lg-4 mb-3">
                                <!-- Default checked radio -->
                                <div class="form-check h-100 border rounded-3">
                                    <div class="p-3">
                                        <label class="form-check-label" for="flexRadioDefault2">
                                            Add new address <br />
                                            <a asp-action="Add" asp-controller="Address" class="text-muted"> Add new </a>
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <form asp-action="OrderConfirmation">
							<div class="mb-3">
                                <input name="OrderTotal" value="@Model.Header.OrderTotal" hidden />
                                <input name="UserId" value="@Model.Header.UserId" hidden />
                                <input name="ShippingMethodId" value="@Model.Header.ShippingMethodId" hidden />
                                <input name="AddressId" value="@Model.Header.AddressId" hidden />
                                @if(@Model.coupon){
                                    <input name="CouponId" value="@Model.Header.CouponId" hidden />
                                }
                                <input name="ShippingMethodId" value="@Model.Header.ShippingMethodId" hidden />
								<p class="mb-0">Message to seller</p>
								<div class="form-outline">
                                    <textarea name="CustomerMessage" class="form-control" id="textAreaExample1" rows="2"></textarea>
								</div>
							</div>
							<div class="float-end">
								<button class="btn btn-light border">Cancel</button>
								<button type="su" class="btn btn-success shadow-0 border">Continue</button>
							</div>
                        </form>
                        
                    </div>
                </div>
                <!-- Checkout -->
            </div>
            <div class="col-xl-4 col-lg-4 d-flex justify-content-center justify-content-lg-end">
                <div class="ms-lg-4 mt-4 mt-lg-0" style="max-width: 320px;">
                    <h6 class="mb-3">Summary</h6>
                    <div class="d-flex justify-content-between">
                        <p class="mb-2">Total price:</p>
                        <p class="mb-2">@Model.FirstTotalPrice.ToString("C")</p>
                    </div>
                    <div class="d-flex justify-content-between">
                        <p class="mb-2">Discount:</p>
                        <p class="mb-2 text-danger">- @Model.DiscountAmount.ToString("C")</p>
                    </div>
                    <div class="d-flex justify-content-between">
                        <p class="mb-2">Shipping cost:</p>
                        <p class="mb-2">+ @Model.ShippingCost</p>
                    </div>
                    @if (Model.coupon)
                    {
                        <div class="d-flex justify-content-between">
                            <p class="mb-2">Coupon discount:</p>
                            <p class="mb-2">- @Model.CouponDiscount.ToString("C")</p>
                        </div>
                    }
                    
                    <hr/>
                    <div class="d-flex justify-content-between">
                        <p class="mb-2">Total price:</p>
                        <p class="mb-2 fw-bold">@Model.Header.OrderTotal.ToString("C")</p>
                    </div>
                    <form asp-action="IndexCoupon" asp-area="Customer" asp-controller="Order" method="get">
                        <div class="mt-3 mb-2">
                            @if (Model.coupon)
                            {
                                <span class="text-muted">Coupon Applied: <strong>@Model.CouponCode</strong></span>
                            }
                            else
                            {
                                <span class="text-muted">Have a promo code?</span>
                            }
                        </div>
                        <div class="input-group mb-4">
                            @if (Model.coupon)
                            {
                                <input type="text" class="form-control border" name="coupon" value="@Model.CouponCode" disabled/>
                                <button type="submit" class="btn btn-light text-primary border" disabled>Apply</button>
                            }
                            else
                            {
                                <input type="text" class="form-control border" name="coupon" placeholder="Promo code" />
                                <button type="submit" class="btn btn-light text-primary border">Apply</button>
                            }
                        </div>
                    </form>
                    <hr />
                    <h6 class="text-dark my-4">Items in cart</h6>
                    @foreach(var item in Model.Carts)
                    {
                        <div class="d-flex align-items-center mb-4">
                            <div class="me-3 position-relative">
                                <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill badge-secondary">
                                    1
                                </span>
                                <img src="/@item.Product.ImageUrl" style="height: 96px; width: 96px;" class="img-sm rounded border" />
                            </div>
                            <div class="">
                                <a href="#" class="nav-link">
                                    @item.Product.Title
                                </a>
                                <div class="price text-muted">Total: @item.Product.Price.ToString("C")</div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

<partial name="_FooterPrimaryColorPartial" />
@section Scripts{
    <script>
        let addresses = document.querySelectorAll(".address");
        let ShippingMethods = document.querySelectorAll(".shippingMethod");
        const urlParams = new URLSearchParams(window.location.search);
        const searchValue = urlParams.get('coupon');

        addresses.forEach(address => {
            address.addEventListener('change', e => {
                if (e.target.checked) {
                    var token = $('input[name="__RequestVerificationToken"]').val();

                    if (!token) {
                        toastr.error("Verification token is missing");
                        return; 
                    }

                    let requestData = {
                        "Id": e.target.value
                    };

                    if (searchValue != null) {
                        requestData.Coupon = searchValue;
                    }

                    $.ajax({
                        url: "/Customer/Order/ChangeAddressStatus",
                        type: "POST",
                        data: requestData,
                        headers: {
                            "RequestVerificationToken": token
                        },
                        success: function (data) {
                            location.reload();
                        },
                        error: function (err) {
                            toastr.error("An error occurred while changing address.");
                        }
                    });
                }
            });
        });

        ShippingMethods.forEach(shipping => {
            shipping.addEventListener('change', e => {
                if (e.target.checked) {
                    var token = $('input[name="__RequestVerificationToken"]').val();

                    if (!token) {
                        toastr.error("Verification token is missing");
                        return;
                    }

                    let requestData = {
                        "Id": e.target.value
                    };

                    if (searchValue != null) {
                        requestData.Coupon = searchValue;
                    }

                    $.ajax({
                        url: "/Customer/Order/ChangeShippingMethod",
                        type: "POST",
                        data: requestData,
                        headers: {
                            "RequestVerificationToken": token
                        },
                        success: function (data) {
                            location.reload();
                        },
                        error: function (err) {
                            toastr.error("An error occurred while changing address.");
                        }
                    });
                }
            });
        });
    </script>

}